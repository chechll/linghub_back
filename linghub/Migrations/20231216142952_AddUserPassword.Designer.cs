// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using linghub.Data;

#nullable disable

namespace linghub.Migrations
{
    [DbContext(typeof(LinghubContext))]
    [Migration("20231216142952_AddUserPassword")]
    partial class AddUserPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("linghub.Models.Calendar", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("date")
                        .HasColumnName("datum");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id")
                        .HasName("XPKkalendar");

                    b.ToTable("calendar", (string)null);
                });

            modelBuilder.Entity("linghub.Models.Text", b =>
                {
                    b.Property<int>("IdText")
                        .HasColumnType("int")
                        .HasColumnName("id_text");

                    b.Property<string>("Ans")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ans");

                    b.Property<string>("Ans1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ans1");

                    b.Property<string>("Ans2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ans2");

                    b.Property<string>("Ans3")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ans3");

                    b.Property<string>("Text1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("text");

                    b.Property<string>("TextName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("text_name");

                    b.HasKey("IdText")
                        .HasName("XPKText");

                    b.ToTable("TEXT", (string)null);
                });

            modelBuilder.Entity("linghub.Models.UText", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdText")
                        .HasColumnType("int")
                        .HasColumnName("id_text");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id")
                        .HasName("XPKUtext");

                    b.HasIndex("IdText");

                    b.HasIndex("IdUser");

                    b.ToTable("U_text", (string)null);
                });

            modelBuilder.Entity("linghub.Models.UWord", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<int>("IdWord")
                        .HasColumnType("int")
                        .HasColumnName("id_word");

                    b.HasKey("Id")
                        .HasName("XPKUword");

                    b.HasIndex("IdUser");

                    b.HasIndex("IdWord");

                    b.ToTable("U_word", (string)null);
                });

            modelBuilder.Entity("linghub.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("surname");

                    b.HasKey("IdUser")
                        .HasName("XPKUser");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("linghub.Models.Word", b =>
                {
                    b.Property<int>("IdWord")
                        .HasColumnType("int")
                        .HasColumnName("id_word");

                    b.Property<string>("Ans1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ans1");

                    b.Property<string>("Ans2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ans2");

                    b.Property<string>("Ans3")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ans3");

                    b.Property<string>("Ensent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ensent");

                    b.Property<string>("Enword")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("enword");

                    b.Property<string>("Rusent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rusent");

                    b.Property<string>("Ruword")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ruword");

                    b.HasKey("IdWord")
                        .HasName("XPKword");

                    b.ToTable("Word", (string)null);
                });

            modelBuilder.Entity("linghub.Models.Calendar", b =>
                {
                    b.HasOne("linghub.Models.User", "IdNavigation")
                        .WithOne("Calendar")
                        .HasForeignKey("linghub.Models.Calendar", "Id")
                        .IsRequired()
                        .HasConstraintName("R_4");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("linghub.Models.UText", b =>
                {
                    b.HasOne("linghub.Models.Text", "IdTextNavigation")
                        .WithMany("UTexts")
                        .HasForeignKey("IdText")
                        .IsRequired()
                        .HasConstraintName("R_6");

                    b.HasOne("linghub.Models.User", "IdUserNavigation")
                        .WithMany("UTexts")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("R_5");

                    b.Navigation("IdTextNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("linghub.Models.UWord", b =>
                {
                    b.HasOne("linghub.Models.User", "IdUserNavigation")
                        .WithMany("UWords")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("R_7");

                    b.HasOne("linghub.Models.Word", "IdWordNavigation")
                        .WithMany("UWords")
                        .HasForeignKey("IdWord")
                        .IsRequired()
                        .HasConstraintName("R_8");

                    b.Navigation("IdUserNavigation");

                    b.Navigation("IdWordNavigation");
                });

            modelBuilder.Entity("linghub.Models.Text", b =>
                {
                    b.Navigation("UTexts");
                });

            modelBuilder.Entity("linghub.Models.User", b =>
                {
                    b.Navigation("Calendar");

                    b.Navigation("UTexts");

                    b.Navigation("UWords");
                });

            modelBuilder.Entity("linghub.Models.Word", b =>
                {
                    b.Navigation("UWords");
                });
#pragma warning restore 612, 618
        }
    }
}
